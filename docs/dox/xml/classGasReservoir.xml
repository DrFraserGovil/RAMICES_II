<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classGasReservoir" kind="class" language="C++" prot="public">
    <compoundname>GasReservoir</compoundname>
    <includes refid="GasReservoir_8h" local="no">GasReservoir.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGasReservoir_1a605b8cee25a348cc3f2899b5108ba674" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classGasStream" kindref="compound">GasStream</ref> &gt;</type>
        <definition>std::vector&lt;GasStream&gt; GasReservoir::Components</definition>
        <argsstring></argsstring>
        <name>Components</name>
        <briefdescription>
<para>A representation of the total amount of gas within the reservoir, separated by the origin of the gas. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="63" column="13" bodyfile="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGasReservoir_1a48858dc4bc562bfab187e76a0d45c8c4" prot="private" static="no" mutable="no">
        <type>const <ref refid="classGlobalParameters" kindref="compound">GlobalParameters</ref> &amp;</type>
        <definition>const GlobalParameters&amp; GasReservoir::Param</definition>
        <argsstring></argsstring>
        <name>Param</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="65" column="25" bodyfile="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGasReservoir_1af461f3f039a67daecb68c26f2fd6149f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GasReservoir::GasReservoir</definition>
        <argsstring>()</argsstring>
        <name>GasReservoir</name>
        <briefdescription>
<para>Default constructor. Initialises the <ref refid="classGasReservoir_1a605b8cee25a348cc3f2899b5108ba674" kindref="member">Components</ref> and gives them their <ref refid="EnumSets_8h_1a14c15ac21b42cff8eb5dcbc24534238b" kindref="member">SourceProcess</ref> ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1a15fab3e87fac3f22e9d221a33269da70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GasReservoir::GasReservoir</definition>
        <argsstring>(const GlobalParameters &amp;param)</argsstring>
        <name>GasReservoir</name>
        <param>
          <type>const <ref refid="classGlobalParameters" kindref="compound">GlobalParameters</ref> &amp;</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>useful constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1ae082c5254cca8d39c72e90ffa6784645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGasStream" kindref="compound">GasStream</ref> &amp;</type>
        <definition>GasStream&amp; GasReservoir::operator[]</definition>
        <argsstring>(SourceProcess source)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="EnumSets_8h_1a14c15ac21b42cff8eb5dcbc24534238b" kindref="member">SourceProcess</ref></type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>A vector-like access overload, allowing indexing into the <ref refid="classGasReservoir_1a605b8cee25a348cc3f2899b5108ba674" kindref="member">Components</ref> vector using appropriate #SourceProcesses. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="22" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1a438c98990290d468fd5de4caa476b632" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classGasStream" kindref="compound">GasStream</ref> &amp;</type>
        <definition>const GasStream&amp; GasReservoir::operator[]</definition>
        <argsstring>(SourceProcess source) const</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="EnumSets_8h_1a14c15ac21b42cff8eb5dcbc24534238b" kindref="member">SourceProcess</ref></type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>An annoyingly necessary redeclaration for when constant references don&apos;t want to play ball. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="25" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1a841a10da610c205d4eb8de4e9ab9ce8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GasReservoir::Mass</definition>
        <argsstring>()</argsstring>
        <name>Mass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current total mass of the reservoir, the sum of <ref refid="classGasStream_1a5cdf9a3ce114e3ddb766fbd8e97c40d9" kindref="member">GasStream::Mass()</ref> calls over the <ref refid="classGasReservoir_1a605b8cee25a348cc3f2899b5108ba674" kindref="member">Components</ref> vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="29" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1a57f681a7cedc98b43dc9aeca96e8f3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GasReservoir::ColdMass</definition>
        <argsstring>()</argsstring>
        <name>ColdMass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current total cold-gas mass of the reservoir, the sum of <ref refid="classGasStream_1a82682ae8856ff675869cce398a6bbd26" kindref="member">GasStream::ColdMass()</ref> calls over the <ref refid="classGasReservoir_1a605b8cee25a348cc3f2899b5108ba674" kindref="member">Components</ref> vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="32" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1acf13e9d636ab41d1838548ec08d26f00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GasReservoir::HotMass</definition>
        <argsstring>()</argsstring>
        <name>HotMass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current total hot-gas mass of the reservoir, the sum of <ref refid="classGasStream_1ab030a30e5279402f9c2134110c0f7fb5" kindref="member">GasStream::HotMass()</ref> calls over the <ref refid="classGasReservoir_1a605b8cee25a348cc3f2899b5108ba674" kindref="member">Components</ref> vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="35" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1a5a6aa00a210d88d1469d3fb565d255d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GasReservoir::Absorb</definition>
        <argsstring>(const GasReservoir &amp;givingGas)</argsstring>
        <name>Absorb</name>
        <param>
          <type>const <ref refid="classGasReservoir" kindref="compound">GasReservoir</ref> &amp;</type>
          <declname>givingGas</declname>
        </param>
        <briefdescription>
<para>Transfer the contents of the input reservoir and sum them into the reservoir. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>givingGas</parametername>
</parameternamelist>
<parameterdescription>
<para>the reservoir which will be summed into the current object (unaltered) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="38" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1a2f358644898f78a0e1594de154e53047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GasReservoir::Absorb</definition>
        <argsstring>(const GasStream &amp;givingGas)</argsstring>
        <name>Absorb</name>
        <param>
          <type>const <ref refid="classGasStream" kindref="compound">GasStream</ref> &amp;</type>
          <declname>givingGas</declname>
        </param>
        <briefdescription>
<para>Transfer the contents of the input stream into the element of <ref refid="classGasReservoir_1a605b8cee25a348cc3f2899b5108ba674" kindref="member">Components</ref> indicated by the input&apos;s <ref refid="classGasStream_1a1ff8e94b9aefcfa71119c35a191ff4d5" kindref="member">GasStream::Source</ref> flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>givingGas</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream which is absorbed into the reservoir (unaltered) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="41" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1ae2e4fdaa1f6b3f7a335b0948e1af1a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GasReservoir::Deplete</definition>
        <argsstring>(double amountToLose)</argsstring>
        <name>Deplete</name>
        <param>
          <type>double</type>
          <declname>amountToLose</declname>
        </param>
        <briefdescription>
<para>Calls <ref refid="classGasStream_1af8e82b7a64f1d8a1af93db0473de284f" kindref="member">GasStream::Deplete(double)</ref> on each element of <ref refid="classGasReservoir_1a605b8cee25a348cc3f2899b5108ba674" kindref="member">Components</ref>, keeping the relative mass contribution of each component equal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>amountToLose</parametername>
</parameternamelist>
<parameterdescription>
<para>The total amount of mass to be lost from the reservoir (shared amongst components) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="44" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1a81bf7608a5ca448d267ce0a563786361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GasReservoir::Deplete</definition>
        <argsstring>(double amountToLose_Cold, double amountToLose_Hot)</argsstring>
        <name>Deplete</name>
        <param>
          <type>double</type>
          <declname>amountToLose_Cold</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amountToLose_Hot</declname>
        </param>
        <briefdescription>
<para>Calls <ref refid="classGasStream_1a44ab71ee97b6bf6cb7fba7ce0c861a32" kindref="member">GasStream::Deplete(double, double)</ref> on each element of <ref refid="classGasReservoir_1a605b8cee25a348cc3f2899b5108ba674" kindref="member">Components</ref>, keeping the relative hot mass and cold mass contribution of each component equal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>amountToLose_Cold</parametername>
</parameternamelist>
<parameterdescription>
<para>The total amount of cold gas mass to be lost from the reservoir (shared amongst components)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amountToLose_Hot</parametername>
</parameternamelist>
<parameterdescription>
<para>The total amount of hot gas mass to be lost from the reservoir (shared amongst components) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="47" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1aa65b29009b11d92cec10d328783df1c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GasReservoir::TransferFrom</definition>
        <argsstring>(GasReservoir &amp;givingGas, double massToMove)</argsstring>
        <name>TransferFrom</name>
        <param>
          <type><ref refid="classGasReservoir" kindref="compound">GasReservoir</ref> &amp;</type>
          <declname>givingGas</declname>
        </param>
        <param>
          <type>double</type>
          <declname>massToMove</declname>
        </param>
        <briefdescription>
<para>Transfers the specified amount of mass across from the target, removing the mass from the target and adding it to the current object. Maintains the thermal, source and elemental ratios of the source object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="52" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1aae92dfb5664e694526db78d5a47c48cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGasStream" kindref="compound">GasStream</ref></type>
        <definition>GasStream GasReservoir::AccretionStream</definition>
        <argsstring>(double amountToLose)</argsstring>
        <name>AccretionStream</name>
        <param>
          <type>double</type>
          <declname>amountToLose</declname>
        </param>
        <briefdescription>
<para>Extracts the chosen amount of cold gas from the reservoir, and puts it into an accretion stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="55" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classGasReservoir_1a630611da13a36426ade46dcdf3528d24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GasReservoir::PrintSelf</definition>
        <argsstring>()</argsstring>
        <name>PrintSelf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="59" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGasReservoir_1aea21701bb5b49713afe907026ea4046e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGasReservoir" kindref="compound">GasReservoir</ref></type>
        <definition>static GasReservoir GasReservoir::Primordial</definition>
        <argsstring>(double mass, const GlobalParameters &amp;param)</argsstring>
        <name>Primordial</name>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>const <ref refid="classGlobalParameters" kindref="compound">GlobalParameters</ref> &amp;</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Generates a primordial gas reservoir of the specified mass <ndash/> only the <ref refid="EnumSets_8h_1a14c15ac21b42cff8eb5dcbc24534238ba79476b2be28a7083e31e983a2e0dd2d2" kindref="member">Primordial</ref> component is populated, with the nature of that component determined by several key parameters in <ref refid="classGlobalParameters" kindref="compound">GlobalParameters</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mass</parametername>
</parameternamelist>
<parameterdescription>
<para>The total mass of the new reservoir</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the global parameter set - required for primordial abundances and hot-gas fractions </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="58" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="classGasReservoir" kindref="compound">GasReservoir</ref> is a heterogenously sourced pool of gas, such as those found within each ring, or representing the IGM. In practicality, they are a container for a vector of <ref refid="classGasStream" kindref="compound">GasStream</ref> objects + assorted ways for these objects to interact with one another </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>GlobalParameters</label>
        <link refid="classGlobalParameters"/>
        <childnode refid="3" relation="usage">
          <edgelabel>Element</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>Meta</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>Output</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>Thermal</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>Galaxy</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>Stellar</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>ParamList</label>
        <link refid="classParamList"/>
      </node>
      <node id="3">
        <label>ElementValues</label>
        <link refid="classElementValues"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>SolarAbundanceFile</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>SolarAbundanceFileNameColumn</edgelabel>
          <edgelabel>SolarAbundanceFileDataColumn</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>JSL::Argument&lt; double &gt;</label>
        <link refid="classJSL_1_1Argument"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>StellarValues</label>
        <link refid="classStellarValues"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>NSMFraction</edgelabel>
          <edgelabel>FeedbackFactor</edgelabel>
          <edgelabel>SNIaFraction</edgelabel>
          <edgelabel>EjectionFraction</edgelabel>
          <edgelabel>MaxZ</edgelabel>
          <edgelabel>MinZ</edgelabel>
          <edgelabel>MinStellarMass</edgelabel>
          <edgelabel>MaxStellarMass</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>JSL::Argument&lt; int &gt;</label>
        <link refid="classJSL_1_1Argument"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>GasReservoir</label>
        <link refid="classGasReservoir"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Param</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>JSL::ArgumentInterface</label>
        <link refid="classJSL_1_1ArgumentInterface"/>
      </node>
      <node id="8">
        <label>MetaValues</label>
        <link refid="classMetaValues"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>TimeStep</edgelabel>
          <edgelabel>SimulationDuration</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ResourceRoot</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ParallelThreads</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>JSL::Argument&lt; std::string &gt;</label>
        <link refid="classJSL_1_1Argument"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>ThermalValues</label>
        <link refid="classThermalValues"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>HotInjection_SNIa</edgelabel>
          <edgelabel>HotInjection_NSM</edgelabel>
          <edgelabel>HotInjection_CCSN</edgelabel>
          <edgelabel>GasCoolingTimeScale</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>OutputValues</label>
        <link refid="classOutputValues"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>Root</edgelabel>
          <edgelabel>GalaxyMassFile</edgelabel>
          <edgelabel>GalacticDirectory</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>GalaxyValues</label>
        <link refid="classGalaxyValues"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>ScaleLengthFinalTime</edgelabel>
          <edgelabel>MaxSFRFraction</edgelabel>
          <edgelabel>IGM_Mass</edgelabel>
          <edgelabel>Radius</edgelabel>
          <edgelabel>MaxScaleLength</edgelabel>
          <edgelabel>ScaleLengthTimeScale</edgelabel>
          <edgelabel>InflowParameterA</edgelabel>
          <edgelabel>MinScaleLength</edgelabel>
          <edgelabel>InflowParameterB</edgelabel>
          <edgelabel>PrimordialHotFraction</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>RingCount</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" line="12" column="1" bodyfile="/home/jack/Documents/Work/RAMICES_II/src/Gas/GasReservoir.h" bodystart="11" bodyend="69"/>
    <listofallmembers>
      <member refid="classGasReservoir_1a5a6aa00a210d88d1469d3fb565d255d3" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>Absorb</name></member>
      <member refid="classGasReservoir_1a2f358644898f78a0e1594de154e53047" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>Absorb</name></member>
      <member refid="classGasReservoir_1aae92dfb5664e694526db78d5a47c48cf" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>AccretionStream</name></member>
      <member refid="classGasReservoir_1a57f681a7cedc98b43dc9aeca96e8f3cd" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>ColdMass</name></member>
      <member refid="classGasReservoir_1a605b8cee25a348cc3f2899b5108ba674" prot="private" virt="non-virtual"><scope>GasReservoir</scope><name>Components</name></member>
      <member refid="classGasReservoir_1ae2e4fdaa1f6b3f7a335b0948e1af1a9e" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>Deplete</name></member>
      <member refid="classGasReservoir_1a81bf7608a5ca448d267ce0a563786361" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>Deplete</name></member>
      <member refid="classGasReservoir_1af461f3f039a67daecb68c26f2fd6149f" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>GasReservoir</name></member>
      <member refid="classGasReservoir_1a15fab3e87fac3f22e9d221a33269da70" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>GasReservoir</name></member>
      <member refid="classGasReservoir_1acf13e9d636ab41d1838548ec08d26f00" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>HotMass</name></member>
      <member refid="classGasReservoir_1a841a10da610c205d4eb8de4e9ab9ce8c" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>Mass</name></member>
      <member refid="classGasReservoir_1ae082c5254cca8d39c72e90ffa6784645" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>operator[]</name></member>
      <member refid="classGasReservoir_1a438c98990290d468fd5de4caa476b632" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>operator[]</name></member>
      <member refid="classGasReservoir_1a48858dc4bc562bfab187e76a0d45c8c4" prot="private" virt="non-virtual"><scope>GasReservoir</scope><name>Param</name></member>
      <member refid="classGasReservoir_1aea21701bb5b49713afe907026ea4046e" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>Primordial</name></member>
      <member refid="classGasReservoir_1a630611da13a36426ade46dcdf3528d24" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>PrintSelf</name></member>
      <member refid="classGasReservoir_1aa65b29009b11d92cec10d328783df1c4" prot="public" virt="non-virtual"><scope>GasReservoir</scope><name>TransferFrom</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
